generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    String                 @id @default(cuid())
  name                  String?
  email                 String?                @unique
  emailVerified         DateTime?
  image                 String?
  password              String?
  role                  UserRole               @default(USER)
  isTwoFactorEnabled    Boolean                @default(false)
  accounts              Account[]
  twoFactorConfirmation TwoFactorConfirmation?
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model VerificationToken {
  id     String   @id @default(cuid())
  email  String?
  token  String?  @unique
  expire DateTime

  @@unique([email, token])
}

model PasswordResetToken {
  id     String   @id @default(cuid())
  email  String?
  token  String?  @unique
  expire DateTime

  @@unique([email, token])
}

model TwoFactorToken {
  id     String   @id @default(cuid())
  email  String?
  token  String?  @unique
  expire DateTime

  @@unique([email, token])
}

model TwoFactorConfirmation {
  id     String @id @default(cuid())
  userId String @unique
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Transaction {
  id            String   @id @default(cuid())
  customersName String
  email         String
  phone         String
  productName   String
  amount        String
  quantity      Int
  dateTime      DateTime @default(now())
  status        Status   @default(Pending)
}

enum Status {
  Pending
  Success
  Failed
}

enum UserRole {
  ADMIN
  USER
}
